[{"path":"https://reckziegel.github.io/uncorbets/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to uncorbets","title":"Contributing to uncorbets","text":"outlines propose change uncorbets. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://reckziegel.github.io/uncorbets/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to uncorbets","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://reckziegel.github.io/uncorbets/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to uncorbets","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://reckziegel.github.io/uncorbets/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to uncorbets","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"Reckziegel/uncorbets\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://reckziegel.github.io/uncorbets/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to uncorbets","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://reckziegel.github.io/uncorbets/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to uncorbets","text":"Please note uncorbets project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://reckziegel.github.io/uncorbets/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Bernardo Reckziegel Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://reckziegel.github.io/uncorbets/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with uncorbets","title":"Getting help with uncorbets","text":"Thanks using uncorbets! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://reckziegel.github.io/uncorbets/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with uncorbets","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://reckziegel.github.io/uncorbets/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with uncorbets","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://reckziegel.github.io/uncorbets/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with uncorbets","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://reckziegel.github.io/uncorbets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernardo Reckziegel. Author, maintainer.","code":""},{"path":"https://reckziegel.github.io/uncorbets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reckziegel B (2024). uncorbets: Uncorrelated Bets via Minimum Torsion Algorithm. R package version 0.1.2, https://reckziegel.github.io/uncorbets/, https://github.com/Reckziegel/uncorbets.","code":"@Manual{,   title = {uncorbets: Uncorrelated Bets via Minimum Torsion Algorithm},   author = {Bernardo Reckziegel},   year = {2024},   note = {R package version 0.1.2, https://reckziegel.github.io/uncorbets/},   url = {https://github.com/Reckziegel/uncorbets}, }"},{"path":"https://reckziegel.github.io/uncorbets/index.html","id":"uncorbets","dir":"","previous_headings":"","what":"Uncorrelated Bets via Minimum Torsion Algorithm","title":"Uncorrelated Bets via Minimum Torsion Algorithm","text":"Euler theorem found extensive applications finance, particularly decomposing homogeneous risk measures degree one. However, limitation approach doesn’t adequately isolate true sources risk within investment portfolio, thus creating gap risk analysis. Minimum Torsion Bets (MTB) method offers compelling solution challenge. Leveraging spectral decomposition, MTB selectively identifies uncorrelated factors close possible original variables among possible matrix rotations. approach ensures refined understanding underlying risk structure. results MTB method yield diversification distribution several noteworthy properties: always positive, reflecting constructive aspect risk management; distribution sums 1, maintaining consistency probabilistic principles; accurately captures true sources risk, enabling precise targeted risk management strategy; distribution offers insightful interpretations, adding analytical value decision-making process. essence, Effective Number Minimum Torsion Bets (ENMTB) extends traditional risk measures providing nuanced view risk diversification, making valuable tool financial professionals seeking optimize portfolio performance.","code":""},{"path":"https://reckziegel.github.io/uncorbets/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Uncorrelated Bets via Minimum Torsion Algorithm","text":"","code":"library(uncorbets)  # prepare data returns <- diff(log(EuStockMarkets)) covariance <- cov(returns)  # Minimum Torsion Matrix torsion_mat <- torsion(covariance)  # Prior Allocation (equal weights, for example) w <- rep(1 / ncol(returns), ncol(returns))  # Compute diversification distribution and the diversification level effective_bets(b = w, sigma = covariance, t = torsion_mat) #> $p #>           [,1] #> DAX  0.2673005 #> SMI  0.2404370 #> CAC  0.2776369 #> FTSE 0.2146256 #>  #> $enb #> [1] 3.980549  # maximize the effective number of bets (enb) max_effective_bets(x0 = w, sigma = covariance, t = torsion_mat) #> $weights #> [1] 0.2227163 0.2603372 0.2114589 0.3054876 #>  #> $enb #> [1] 4 #>  #> $counts #>      nfval ngval #> [1,]    47     9 #>  #> $lambda_lb #>      [,1] #> DAX     0 #> SMI     0 #> CAC     0 #> FTSE    0 #>  #> $lambda_ub #>      [,1] #> DAX     0 #> SMI     0 #> CAC     0 #> FTSE    0 #>  #> $lambda_eq #> [1] 1.162481e-06 #>  #> $gradient #>               [,1] #> DAX   1.966953e-06 #> SMI  -4.768372e-06 #> CAC   8.940697e-06 #> FTSE -3.337860e-06 #>  #> $hessian #>             DAX        SMI        CAC       FTSE #> DAX   5.3149468 -1.4603802 -1.4893686 -0.5169268 #> SMI  -1.4603802  5.2212615 -3.6528175 -0.9075766 #> CAC  -1.4893686 -3.6528175  6.3451210 -0.5218244 #> FTSE -0.5169268 -0.9075766 -0.5218244  7.6046588"},{"path":"https://reckziegel.github.io/uncorbets/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Uncorrelated Bets via Minimum Torsion Algorithm","text":"Install released version CRAN : Install development version uncorbets github :","code":"install.packages(\"uncorbets\") # install.packages(\"devtools\") devtools::install_github(\"Reckziegel/uncorbets\")"},{"path":"https://reckziegel.github.io/uncorbets/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Uncorrelated Bets via Minimum Torsion Algorithm","text":"Meucci, Attilio Santangelo, Alberto Deguest, Romain, Risk Budgeting Diversification Based Optimized Uncorrelated Factors (November 10, 2015). Available SSRN: https://www.ssrn.com/abstract=2276632 http://dx.doi.org/10.2139/ssrn.2276632 Attilio Meucci (2021). Portfolio Diversification Based Optimized Uncorrelated Factors (https://www.mathworks.com/matlabcentral/fileexchange/43245-portfolio-diversi-cation-based--optimized-uncorrelated-factors), MATLAB Central File Exchange. Retrieved July 8, 2021.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/effective_bets.html","id":null,"dir":"Reference","previous_headings":"","what":"Effective Number of Bets — effective_bets","title":"Effective Number of Bets — effective_bets","text":"Computes diversification probability distribution effective number bets allocation.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/effective_bets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effective Number of Bets — effective_bets","text":"","code":"effective_bets(b, sigma, t)"},{"path":"https://reckziegel.github.io/uncorbets/reference/effective_bets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effective Number of Bets — effective_bets","text":"b vector exposures (allocations). sigma n x n covariance matrix. t n x n torsion matrix.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/effective_bets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effective Number of Bets — effective_bets","text":"list length 2 :  p: diversification probability distribution; enb: effective number bets.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/effective_bets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effective Number of Bets — effective_bets","text":"","code":"# extract the invariants from the data set.seed(123) log_ret <- matrix(rnorm(400), ncol = 4) / 10  # compute the covariance matrix sigma <- stats::cov(log_ret)  # torsion torsion_cov <- torsion(sigma = sigma, model = 'minimum-torsion', method ='exact')  # 1/N reference b <- rep(1 / ncol(log_ret), ncol(log_ret))  # ENB effective_bets(b = b, sigma = sigma, t = torsion_cov) #> $p #>           [,1] #> [1,] 0.1886652 #> [2,] 0.2822564 #> [3,] 0.2262331 #> [4,] 0.3028453 #>  #> $enb #> [1] 3.934066 #>"},{"path":"https://reckziegel.github.io/uncorbets/reference/is_col_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object has is named — is_col_named","title":"Test if an object has is named — is_col_named","text":"Test object named","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/is_col_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object has is named — is_col_named","text":"","code":"is_col_named(x)"},{"path":"https://reckziegel.github.io/uncorbets/reference/is_col_named.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object has is named — is_col_named","text":"x object tested.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/is_col_named.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object has is named — is_col_named","text":"flag (`TRUE` `FALSE`)","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/is_quadratic.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if an object is quadratic — is_quadratic","title":"Test if an object is quadratic — is_quadratic","text":"Test object quadratic","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/is_quadratic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if an object is quadratic — is_quadratic","text":"","code":"is_quadratic(x)"},{"path":"https://reckziegel.github.io/uncorbets/reference/is_quadratic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if an object is quadratic — is_quadratic","text":"x object tested.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/is_quadratic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if an object is quadratic — is_quadratic","text":"flag (`TRUE` `FALSE`)","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/max_effective_bets.html","id":null,"dir":"Reference","previous_headings":"","what":"Risk-Diversification powered by the Minimum Torsion Algorithm — max_effective_bets","title":"Risk-Diversification powered by the Minimum Torsion Algorithm — max_effective_bets","text":"Finds allocation maximizes effective_bets.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/max_effective_bets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Risk-Diversification powered by the Minimum Torsion Algorithm — max_effective_bets","text":"","code":"max_effective_bets(x0, sigma, t, tol = 1e-20, maxeval = 5000L, maxiter = 5000L)"},{"path":"https://reckziegel.github.io/uncorbets/reference/max_effective_bets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Risk-Diversification powered by the Minimum Torsion Algorithm — max_effective_bets","text":"x0 numeric vector search starting point. Usually \"one n\" allocation. sigma n x n covariance matrix. t n x n torsion matrix. tol interger convergence tolerance. maxeval integer maximum number evaluations objective function. maxiter integer maximum number iterations.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/max_effective_bets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Risk-Diversification powered by the Minimum Torsion Algorithm — max_effective_bets","text":"list following components:  weights: optimal allocation policy enb: optimal effective number bets counts: number iterations objective gradient lambda_lb: lower bound Lagrange multipliers lambda_ub: upper bound Lagrange multipliers lambda_eq: equality Lagrange multipliers gradient: gradient objective function optimum hessian: hessian objective function optimum","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncorbets/reference/max_effective_bets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Risk-Diversification powered by the Minimum Torsion Algorithm — max_effective_bets","text":"","code":"# extract the invariants from the data set.seed(123) log_ret <- matrix(stats::rnorm(400), ncol = 4) / 10  # compute the covariance matrix sigma <- stats::cov(log_ret)  # torsion torsion_cov <- torsion(sigma = sigma, model = 'minimum-torsion', method = 'exact')  # 1/N reference b <- rep(1 / ncol(log_ret), ncol(log_ret))  max_effective_bets(x0 = b, sigma = sigma, t = torsion_cov) #> $weights #> [1] 0.2799795 0.2333368 0.2605180 0.2261656 #>  #> $enb #> [1] 4 #>  #> $counts #>      nfval ngval #> [1,]    49     8 #>  #> $lambda_lb #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $lambda_ub #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0 #> [4,]    0 #>  #> $lambda_eq #> [1] 1.065765e-05 #>  #> $gradient #>               [,1] #> [1,]  0.0001289845 #> [2,] -0.0002635717 #> [3,]  0.0003029108 #> [4,] -0.0002350807 #>  #> $hessian #>           [,1]      [,2]      [,3]      [,4] #> [1,]  52.21386 -17.73535 -17.16737 -19.90595 #> [2,] -17.73535  50.87763 -14.12780 -15.66158 #> [3,] -17.16737 -14.12780  51.18113 -19.44538 #> [4,] -19.90595 -15.66158 -19.44538  58.13470 #>"},{"path":"https://reckziegel.github.io/uncorbets/reference/sqrtm.html","id":null,"dir":"Reference","previous_headings":"","what":"MATLAB `sqrtm` functionality — sqrtm","title":"MATLAB `sqrtm` functionality — sqrtm","text":"function returns square root quadratic matrix.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/sqrtm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MATLAB `sqrtm` functionality — sqrtm","text":"","code":"sqrtm(x)"},{"path":"https://reckziegel.github.io/uncorbets/reference/sqrtm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MATLAB `sqrtm` functionality — sqrtm","text":"x square matrix.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/sqrtm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MATLAB `sqrtm` functionality — sqrtm","text":"squared matrix.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/torsion.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Minimum Torsion Matrix — torsion","title":"Computes the Minimum Torsion Matrix — torsion","text":"Computes Principal Components Torsion Minimum Torsion diversification analysis.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/torsion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Minimum Torsion Matrix — torsion","text":"","code":"torsion(sigma, model = \"minimum-torsion\", method = \"exact\", max_niter = 10000L)"},{"path":"https://reckziegel.github.io/uncorbets/reference/torsion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Minimum Torsion Matrix — torsion","text":"sigma n x n covariance matrix. model One : \"pca\" \"minimum-torsion\". method One : \"approximate\" \"exact\". used model = \"minimum-torsion\". max_niter integer maximum number iterations.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/torsion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Minimum Torsion Matrix — torsion","text":"n x n torsion matrix.","code":""},{"path":"https://reckziegel.github.io/uncorbets/reference/torsion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Minimum Torsion Matrix — torsion","text":"","code":"# extract the invariants from the data set.seed(123) log_ret <- matrix(rnorm(400), ncol = 4) / 10  # calculate the covariance matrix sigma <- stats::cov(log_ret)  # torsion torsion(sigma = sigma, model = 'minimum-torsion', method ='exact') #>            [,1]        [,2]        [,3]        [,4] #> [1,] 1.00534916  0.02148323  0.06301570  0.02088640 #> [2,] 0.02410872  1.00122793 -0.01410694 -0.02018601 #> [3,] 0.06823684 -0.01361221  1.00506025  0.02313965 #> [4,] 0.02704863 -0.02329473  0.02767377  1.00160337"},{"path":[]},{"path":"https://reckziegel.github.io/uncorbets/news/index.html","id":"uncorbets-012-1","dir":"Changelog","previous_headings":"","what":"uncorbets 0.1.2","title":"uncorbets 0.1.2","text":"Bug fixes","code":""},{"path":"https://reckziegel.github.io/uncorbets/news/index.html","id":"uncorbets-011","dir":"Changelog","previous_headings":"","what":"uncorbets 0.1.1","title":"uncorbets 0.1.1","text":"CRAN release: 2021-09-24 Added max_effective_bets() (#2)","code":""},{"path":"https://reckziegel.github.io/uncorbets/news/index.html","id":"uncorbets-010","dir":"Changelog","previous_headings":"","what":"uncorbets 0.1.0","title":"uncorbets 0.1.0","text":"CRAN release: 2021-07-12 First release uncorbets CRAN.","code":""},{"path":"https://reckziegel.github.io/uncorbets/news/index.html","id":"uncorbets-009000","dir":"Changelog","previous_headings":"","what":"uncorbets 0.0.9000","title":"uncorbets 0.0.9000","text":"First release uncorbets developing version.","code":""}]
